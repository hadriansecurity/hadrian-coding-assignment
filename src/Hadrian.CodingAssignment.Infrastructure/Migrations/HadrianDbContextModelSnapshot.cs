// <auto-generated />
using System;
using Hadrian.CodingAssignment.Infrastructure.Data.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hadrian.CodingAssignment.Infrastructure.Migrations
{
    [DbContext(typeof(HadrianDbContext))]
    partial class HadrianDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hadrian.CodingAssignment.Infrastructure.Model.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_organizations");

                    b.ToTable("organizations", (string)null);
                });

            modelBuilder.Entity("Hadrian.CodingAssignment.Infrastructure.Model.Risk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid")
                        .HasColumnName("organization_id");

                    b.Property<string>("RiskSeverity")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("risk_severity");

                    b.Property<string>("RiskStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("risk_status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("VulnerabilityId")
                        .HasColumnType("text")
                        .HasColumnName("vulnerability_id");

                    b.HasKey("Id")
                        .HasName("pk_risks");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_risks_organization_id");

                    b.ToTable("risks", (string)null);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Hadrian.CodingAssignment.Infrastructure.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid")
                        .HasColumnName("organization_id");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_users_organization_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Hadrian.CodingAssignment.Infrastructure.Model.Risk", b =>
                {
                    b.HasOne("Hadrian.CodingAssignment.Infrastructure.Model.Organization", "Organization")
                        .WithMany("Risks")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_risks_organizations_organization_id");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Hadrian.CodingAssignment.Infrastructure.Model.User", b =>
                {
                    b.HasOne("Hadrian.CodingAssignment.Infrastructure.Model.Organization", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_organizations_organization_id");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Hadrian.CodingAssignment.Infrastructure.Model.Organization", b =>
                {
                    b.Navigation("Risks");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
